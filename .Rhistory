View(read_xlsx("C:/Users/giuli/Docs/Useful Docs/Thesis/data.xlsx"))
library(readxl)
View(read_xlsx("C:/Users/giuli/Docs/Useful Docs/Thesis/data.xlsx"))
library(readxl)
library(tidyverse)
library(lubridate)
install.packages("mFilter")
library(mFilter)
library(lfe)
library(plm)
library(Hmisc) # to make time lags and correlation matrix
rm(list = ls())
options(scipen = 4) # number of significant digits to show, in this case 4
View(read_xlsx("C:/Users/giuli/Docs/Useful Docs/Thesis/data.xlsx"))
# prepare dataframe
df <-read_xlsx("C:/Users/giuli/Docs/Useful Docs/thesis_data.xlsx") %>%
setNames(c("country", "code", "year", "gdp", "pbl", "prv")) %>%
select(., c("country", "code", "year", "gdp", "pbl", "prv")) %>%
mutate(., country = as.factor(country)) %>%
mutate(., year = as.Date(as.character(year), format = "%Y")) %>%
na.omit(.) %>%
group_by(country) %>%
mutate(., gdp_log = log(gdp)) %>%
mutate(., gdp_dif = c(NA, diff(gdp_log))) %>%
mutate(., gdp_hp = hpfilter(gdp_log, 100)$cycle) %>% #cyclical components, deviation from the trend
mutate(., pbl_lag = Lag(c(pbl)),shift=1) %>%
mutate(., pbl_log = log(pbl)) %>%
mutate(., pbl_sq = (pbl^2)) %>%
mutate(., pbl_dif = c(NA, diff(pbl_log))) %>%
#mutate(., pbl_dif_sq = (pbl_dif^2)) %>%
mutate(., pbl_dif_lag = Lag(c(pbl_dif)),shift=1) %>%
mutate(., prv_lag = Lag(c(prv)),shift=1) %>%
mutate(., prv_log = log(prv)) %>%
mutate(., prv_sq = (prv^2)) %>%
mutate(., prv_dif = c(NA, diff(prv_log))) %>%
#mutate(., prv_dif_sq = (prv_dif^2)) %>%
mutate(., prv_dif_lag = Lag(c(prv_dif)),shift=1) %>%
#mutate(., gdp_dif3 = lead(gdp_dif,3)) %>%
#mutate(., gdp_f3 = lead(gdp_f,3)) %>%
mutate(., pbl_hp = hpfilter(pbl, 100)$cycle) %>%
#mutate(., pbl_hp_sq = (pbl_hp^2)) %>%
mutate(., pbl_hp_lag = Lag(c(pbl_hp)),shift=1) %>%
mutate(., prv_hp = hpfilter(prv, 100)$cycle) %>%
#mutate(., prv_hp_sq = (prv_hp^2)) %>%
mutate(., prv_hp_lag = Lag(c(prv_hp)),shift=1) %>%
#mutate(.,prv_pbl = prv_hp*pbl_hp) %>%
mutate(., pbl_high = if_else(pbl > 62.8, 1, 0)) %>%
mutate(., prv_high = if_else(prv > 122.8, 1, 0)) %>%
ungroup() %>%
na.omit(.)
# prepare dataframe
df <-read_xlsx("C:/Users/giuli/Docs/Useful Docs/Thesis/data.xlsx") %>%
setNames(c("country", "code", "year", "gdp", "pbl", "prv")) %>%
select(., c("country", "code", "year", "gdp", "pbl", "prv")) %>%
mutate(., country = as.factor(country)) %>%
mutate(., year = as.Date(as.character(year), format = "%Y")) %>%
na.omit(.) %>%
group_by(country) %>%
mutate(., gdp_log = log(gdp)) %>%
mutate(., gdp_dif = c(NA, diff(gdp_log))) %>%
mutate(., gdp_hp = hpfilter(gdp_log, 100)$cycle) %>% #cyclical components, deviation from the trend
mutate(., pbl_lag = Lag(c(pbl)),shift=1) %>%
mutate(., pbl_log = log(pbl)) %>%
mutate(., pbl_sq = (pbl^2)) %>%
mutate(., pbl_dif = c(NA, diff(pbl_log))) %>%
#mutate(., pbl_dif_sq = (pbl_dif^2)) %>%
mutate(., pbl_dif_lag = Lag(c(pbl_dif)),shift=1) %>%
mutate(., prv_lag = Lag(c(prv)),shift=1) %>%
mutate(., prv_log = log(prv)) %>%
mutate(., prv_sq = (prv^2)) %>%
mutate(., prv_dif = c(NA, diff(prv_log))) %>%
#mutate(., prv_dif_sq = (prv_dif^2)) %>%
mutate(., prv_dif_lag = Lag(c(prv_dif)),shift=1) %>%
#mutate(., gdp_dif3 = lead(gdp_dif,3)) %>%
#mutate(., gdp_f3 = lead(gdp_f,3)) %>%
mutate(., pbl_hp = hpfilter(pbl, 100)$cycle) %>%
#mutate(., pbl_hp_sq = (pbl_hp^2)) %>%
mutate(., pbl_hp_lag = Lag(c(pbl_hp)),shift=1) %>%
mutate(., prv_hp = hpfilter(prv, 100)$cycle) %>%
#mutate(., prv_hp_sq = (prv_hp^2)) %>%
mutate(., prv_hp_lag = Lag(c(prv_hp)),shift=1) %>%
#mutate(.,prv_pbl = prv_hp*pbl_hp) %>%
mutate(., pbl_high = if_else(pbl > 62.8, 1, 0)) %>%
mutate(., prv_high = if_else(prv > 122.8, 1, 0)) %>%
ungroup() %>%
na.omit(.)
head(df, 10)
dim(df)
glimpse(df)
describe(df)
summary(df)
library(readxl)
library(tidyverse)
library(lubridate)
install.packages("mFilter")
library(mFilter)
library(lfe)
library(plm)
install.packages("stargazer")
library(stargazer)
library(Hmisc) # to make time lags and correlation matrix
#library(lmtest) # to compute granger test
rm(list = ls())
options(scipen = 4) # number of significant digits to show, in this case 4
View(read_xlsx("C:/Users/giuli/Docs/Useful Docs/Thesis/data.xlsx"))
# prepare dataframe
df <-read_xlsx("C:/Users/giuli/Docs/Useful Docs/Thesis/data.xlsx") %>%
setNames(c("country", "code", "year", "gdp", "pbl", "prv")) %>%
select(., c("country", "code", "year", "gdp", "pbl", "prv")) %>%
mutate(., country = as.factor(country)) %>%
mutate(., year = as.Date(as.character(year), format = "%Y")) %>%
na.omit(.) %>%
group_by(country) %>%
mutate(., gdp_log = log(gdp)) %>%
mutate(., gdp_dif = c(NA, diff(gdp_log))) %>%
mutate(., gdp_hp = hpfilter(gdp_log, 100)$cycle) %>% #cyclical components, deviation from the trend
mutate(., pbl_lag = Lag(c(pbl)),shift=1) %>%
mutate(., pbl_log = log(pbl)) %>%
mutate(., pbl_sq = (pbl^2)) %>%
mutate(., pbl_dif = c(NA, diff(pbl_log))) %>%
#mutate(., pbl_dif_sq = (pbl_dif^2)) %>%
mutate(., pbl_dif_lag = Lag(c(pbl_dif)),shift=1) %>%
mutate(., prv_lag = Lag(c(prv)),shift=1) %>%
mutate(., prv_log = log(prv)) %>%
mutate(., prv_sq = (prv^2)) %>%
mutate(., prv_dif = c(NA, diff(prv_log))) %>%
#mutate(., prv_dif_sq = (prv_dif^2)) %>%
mutate(., prv_dif_lag = Lag(c(prv_dif)),shift=1) %>%
#mutate(., gdp_dif3 = lead(gdp_dif,3)) %>%
#mutate(., gdp_f3 = lead(gdp_f,3)) %>%
mutate(., pbl_hp = hpfilter(pbl, 100)$cycle) %>%
#mutate(., pbl_hp_sq = (pbl_hp^2)) %>%
mutate(., pbl_hp_lag = Lag(c(pbl_hp)),shift=1) %>%
mutate(., prv_hp = hpfilter(prv, 100)$cycle) %>%
#mutate(., prv_hp_sq = (prv_hp^2)) %>%
mutate(., prv_hp_lag = Lag(c(prv_hp)),shift=1) %>%
#mutate(.,prv_pbl = prv_hp*pbl_hp) %>%
mutate(., pbl_high = if_else(pbl > 62.8, 1, 0)) %>%
mutate(., prv_high = if_else(prv > 122.8, 1, 0)) %>%
ungroup() %>%
na.omit(.)
View(df)
head(df, 10)
dim(df)
glimpse(df)
describe(df)
summary(df)
install.packages("skimr")
library(skimr)
skim(df)
install.packages("devtools")
library(devtools)
devtools::install_github("ropensci/visdat")
library(visdat)
#The Vis_dat() function of the visdat package is a great way to visualize the data type and missing data within a data frame.
vis_miss(df)
vis_dat(df)
pdata <- pdata.frame(df, index=c("country","year"), drop.index=TRUE, row.names=TRUE)
View(pdata)
gdp_dif3 <-lag(pdata$gdp_dif, k=,3)
gdp_hp3 <-lead(pdata$gdp_hp, k=,3)
df <-cbind(df,gdp_dif3,gdp_hp3)
#gdp_lag
gdp_lag3 <-lag(pdata$gdp_dif, k=,3)
df <-cbind(df,gdp_lag3)
#gdp_lead
gdp_dif1 <-lead(pdata$gdp_dif, k=,1)
gdp_dif2 <-lead(pdata$gdp_dif, k=,2)
gdp_dif4 <-lead(pdata$gdp_dif, k=,4)
gdp_dif5 <-lead(pdata$gdp_dif, k=,5)
gdp_dif6 <-lead(pdata$gdp_dif, k=,6)
df <-cbind(df,gdp_dif1,gdp_dif2,gdp_dif4,gdp_dif5,gdp_dif6)
#pbl_lag
pbl_lag2 <-lead(pdata$pbl_dif, k=,-2)
prv_lag2 <-lag(pdata$prv_dif, k=,2)
pbl_hp_lag2 <-lag(pdata$pbl_hp, k=,2)
prv_hp_lag2 <-lag(pdata$prv_hp, k=,2)
df <-cbind(df,pbl_lag2,prv_lag2,pbl_hp_lag2,prv_hp_lag2)
pbl_lag3 <-lead(pdata$pbl_dif, k=,-3)
prv_lag3 <-lag(pdata$prv_dif, k=,3)
pbl_lag4 <-lead(pdata$pbl_dif, k=,-4)
prv_lag4 <-lag(pdata$prv_dif, k=,4)
pbl_lag5 <-lead(pdata$pbl_dif, k=,-5)
prv_lag5 <-lag(pdata$prv_dif, k=,5)
df <-cbind(df,pbl_lag3,prv_lag3,pbl_lag4,prv_lag4,pbl_lag5,prv_lag5)
#pbl_lead
pbl_lead3 <-lead(pdata$pbl, k=,3)
df <-cbind(df,pbl_lead3)
rownames(df) <- c()  # to delete rownames
df <-na.omit(df)
View(df)
#Low Pudebt countries
df_low_pbl <-subset(df, code %in% c("3","4","5","7","9","11"))
#High Pudebt countries
df_high_pbl <-subset(df, code %in% c("1","2","6","8","10"))
# only low-debt dataset
df_low_pbl_dummy <- df %>%
filter(., pbl_high == 0)
# only high-debt dataset
df_high_pbl_dummy <- df %>%
filter(., pbl_high == 1)
ggplot(df, aes(pbl,gdp_dif3)) +
geom_point() +
xlab("Public debt-to-GDP t") + ylab("GDP t+3") +
geom_smooth(span = 0.8) +
facet_wrap(~country)
ggplot(df, aes(pbl,gdp_dif3)) +
geom_point() +
xlab("Public debt-to-GDP t") + ylab("GDP t+3") +
geom_smooth(span = 0.8)
ggplot(df, aes(prv,gdp_dif3)) +
geom_point() +
xlab("Private debt-to-GDP t") + ylab("GDP t+3") +
geom_smooth(span = 0.8)
ggplot(df, aes(pbl_dif,gdp_dif3)) +
geom_point() +
xlab("Public debt growth t") + ylab("GDP t+3") +
geom_smooth(span = 0.8)
ggplot(df, aes(prv_dif,gdp_dif3)) +
geom_point() +
xlab("Private debt growth t") + ylab("GDP t+3") +
geom_smooth(span = 0.8)
ggplot(df, aes(pbl,gdp_dif3)) +
geom_point() +
xlab("Public debt-to-GDP t") + ylab("GDP t+3") +
geom_smooth(span = 0.8) +
facet_wrap(~country)
